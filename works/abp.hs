--------------------------------------------------------------------------------
-- | 『 The Algorithmic Beauty of Plants 』の Figure
--------------------------------------------------------------------------------

import Graphics.Gloss
import Graphics.Turtle
import Graphics.L_system


-- | Main
main :: IO ()
main = runTurtle initDisp white 500 [tData08 1]


-- P.002
-- | Figure 1.1: Construction of the snowflake curve
tData01 :: Int -> (TurtleST, [Command])
tData01 n = (st, [cmds])
  where
    st   = initST {point = (-200, 200 / sqrt 3), mark = False}
    cmds = l_system initiator generator n (400 / 3^n) 60
      where
        initiator = "F--F--F"
        generator = [('F', "F+F--F+F")]


-- P.008
-- | Figure 1.6: Generating a quadratic Koch island (n = 2)
tData02 :: Int -> (TurtleST, [Command])
tData02 n = (st, [cmds])
  where
    st   = initST {point = (-150, 150), mark = False}
    cmds = l_system initiator generator n (300 / 4^n) 90
      where
        initiator = "F-F-F-F"
        generator = [('F', "F-F+F+FF-F-F+F")]


-- P.009
-- | Figure 1.7: Examples of Koch curves generated using L-system
-- (a) Quadratic Koch island (n = 2)
tData03 :: Int -> (TurtleST, [Command])
tData03 n = (st, [cmds])
  where
    st   = initST {point = (-150, 150), mark = False}
    cmds = l_system initiator generator n (300 / 6^n) 90
      where
        initiator = "F-F-F-F"
        generator = [('F', "F+FF-FF-F-F+F+F F-F-F+F+FF+FF-F")]

-- (b) A quadratic modification of the snowflake curve (n = 4)
tData04 :: Int -> (TurtleST, [Command])
tData04 n = (st, [cmds])
  where
    st   = initST {angle = 90, point = (-300, 0), mark = False}
    cmds = l_system initiator generator n (600 / 3^n) 90
      where
        initiator = "-F"
        generator = [('F', "F+F-F-F+F")]


-- | Figure 1.8: Combination of islands and lakes (n = 2)
tData05 :: Int -> (TurtleST, [Command])
tData05 n = (st, [cmds])
  where
    st   = initST {point = (-150, -150), mark = False}
    cmds = l_system initiator generator n (300 / 6^n) 90
      where
        initiator = "F+F+F+F"
        generator = [('F', "F+f-FF+F+FF+Ff+FF-f+FF-F-FF-Ff-FFF"), ('f', "ffffff")]


-- P.010
-- | Figure 1.9: A sequence of Koch curves obtained by successive modification of
--   the production successor
-- a (n = 4)
tData06 :: Int -> (TurtleST, [Command])
tData06 n = (st, [lt (fromIntegral n * 18.4), cmds])
  where
    st   = initST {point = (-150, 150), mark = False}
    cmds = l_system initiator generator n (300 / (sqrt 10)^n) 90
      where
        initiator = "F-F-F-F"
        generator = [('F', "FF-F-F-F-F-F+F")]

-- b (n = 4)
tData07 :: Int -> (TurtleST, [Command])
tData07 n = (st, [cmds])
  where
    st   = initST {point = (-200, 200), mark = False}
    cmds = l_system initiator generator n (400 / 3^n) 90
      where
        initiator = "F-F-F-F"
        generator = [('F', "FF-F-F-F-FF")]

-- c (n = 4)
tData08 :: Int -> (TurtleST, [Command])
tData08 n = (st, [grid, cmds])
  where
    st   = initST {mark = False}
    cmds = l_system initiator generator n (100) 90
      where
        initiator = "F" -- "F-F-F-F"
        generator = [('F', "FF-F+F-F-FF")]

-- d
cmd09 = l_system initiator generator 4 20 90
  where
    initiator = "F-F-F-F"
    generator = [('F', "FF-F--F-F")]

-- e
cmd10 = l_system initiator generator 5 20 90
  where
    initiator = "F-F-F-F"
    generator = [('F', "F-FF--F-F")]

-- f
cmd11 = l_system initiator generator 4 20 90
  where
    initiator = "F-F-F-F"
    generator = [('F', "F-F+F-F-F")]


-- P.011
-- | Figure 1.10: Examples of curve generated by edge-rewiting L-system
-- (a) dragon curve
cmd12 = l_system initiator generator 10 20 90
  where
    initiator = "A"
    generator = [('A', "A+B+"), ('B', "-A-B")]

-- (b) Sierphinski gasket
cmd13 = l_system initiator generator 6 20 60
  where
    initiator = "B"
    generator = [('A', "B+A+B"), ('B', "A-B-A")]


-- P.012
-- | Figure 1.11: Exampless of FASS curves generated by edge-rewiting L-system
-- (a) hexagonal Gosper curve
cmd14 = l_system initiator generator 4 10 60
  where
    initiator = "A"
    generator = [('A', "A+B++B-A--AA-B+"), ('B', "-A+BB++B+A--A-B")]

-- (b) quadratic Gosper curve or E-curve
cmd15 = l_system initiator generator 2 10 90
  where
    initiator = "-B"
    generator = [ ('A', "AA-B-B+A+A-B-BA+ B+AAB-A+B+AA+ B-AB-B-A+A+BB-")
                , ('B', "+AA-B-B+A+AB+A- BB-A-B+ABB-A- BA+A+B-B-A+A+BB") ]


-- P.015
-- | Figure 1.15: Recursive construction of the Hilbert curve
cmd16 = l_system initiator generator 4 10 90
  where
    initiator = "L"
    generator = [('L', "+RF-LFL-FR+"), ('R', "-LF+RFR+FL-")]
